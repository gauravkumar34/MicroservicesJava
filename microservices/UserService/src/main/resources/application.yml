server:
  port: 8081

spring:
  datasource:
    url: jdbc:mysql://localhost:3306/microservices
    username: root
    password: root
    driver-class-name: com.mysql.cj.jdbc.Driver

  config:
    import: configserver:http://localhost:8085
#    profile:
#      active: dev


  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true

  application:
    name: USER-SERVICE

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://dev-84262907.okta.com/oauth2/default
      client:
        registration:
          my-internal-client: #client name
            provider: okta
            authorization-grant-type: client_credentials
            scope: internal
            client-id: 0oaabww0xdzD0KQUJ5d7
            client-secret: wytd73V9pGeJNh4acMZpiG5v0waoNUp98vJ4280V
        provider:
          okta:
            issuer-uri: https://dev-84262907.okta.com/oauth2/default

management:
  health:
    circuitbreakers:
      enabled: true

  endpoints:
    web:
      exposure:
        include: health

  endpoint:
    health:
      show-details: always


resilience4j:
  circuitbreaker:
    instances:
      ratingHotelBreaker:
        registerHealthIndicator: true
        eventConsumerBufferSize: 10
        failureRateThreshold: 50
        minimumNumberOfCalls: 5
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 6s
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        slidingWindowType: COUNT_BASED

  retry:
    instances:
      ratingHotelBreaker:
        max-attempts: 3
        wait-duration: 3s
  ratelimiter:
    instances:
      userRateLimiter:
        limit-refresh-period: 4s
        limit-for-period: 2
        timeout-duration: 0s

okta:
  oauth2:
    issuer: https://dev-84262907.okta.com/oauth2/default
    audience: api://default

